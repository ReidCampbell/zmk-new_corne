#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD0";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   // 10
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        label = "RGB_ENCODER";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    combos {
        compatible = "zmk,combos";

        Arrow {
            bindings = <&Arrow>;
            key-positions = <10 11>;
        };

        copy_cut_combo {
            bindings = <&copy_macro>;
            hold-bindings = <&cut_macro>;
            key-positions = <28 29>;
            timeout-ms = <200>;
            slow-release;
        };

        Paste {
            bindings = <&paste_macro>;
            key-positions = <29 30>;
        };

        Undo {
            bindings = <&undo_macro>;
            key-positions = <27 28>;
        };

        CurlyL {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <21 22>;
        };

        Del {
            bindings = <&kp DEL>;
            key-positions = <21 22 23>;
        };

        ParaL {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <8 9>;
        };

        SquareL {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <34 35>;
        };

        SquareR {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <35 36>;
        };

        ParaR {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <9 10>;
        };

        CurlyR {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <22 23>;
        };

        Tab {
            bindings = <&kp TAB>;
            key-positions = <15 16 17>;
        };
    };

    macros {
    Arrow: Arrow {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&kp EQUAL &kp GT>;
        label = "ARROW";
    };

    copy_macro: copy_macro {
        compatible = "zmk,behavior-macro";
        label = "COPY_MACRO";
        #binding-cells = <0>;
        bindings = <&kp LG(C)>;
    };

    cut_macro: cut_macro {
        compatible = "zmk,behavior-macro";
        label = "CUT_MACRO";
        #binding-cells = <0>;
        bindings = <&kp LG(X)>;
    };

    paste_macro: paste_macro {
        compatible = "zmk,behavior-macro";
        label = "PASTE_MACRO";
        #binding-cells = <0>;
        bindings = <&kp LG(V)>;
    };

    undo_macro: undo_macro {
        compatible = "zmk,behavior-macro";
        label = "UNDO_MACRO";
        #binding-cells = <0>;
        bindings = <&kp LG(Z)>;
    };
};

    keymap {
        compatible = "zmk,keymap";

        layer_4 {
            bindings = <
&trans  &kp W               &kp L           &kp Y           &kp P             &kp B               &trans  &kp Z      &kp F              &kp O            &kp U            &kp APOS             &trans
&trans  &hrm LEFT_CONTROL C  &hrm LEFT_ALT R  &hrm LEFT_GUI S  &hrm LEFT_SHIFT T  &kp G               &trans  &kp M      &hrm RIGHT_SHIFT N  &hrm RIGHT_GUI E  &hrm RIGHT_ALT I  &hrm RIGHT_CONTROL A  &trans
&trans  &kp Q               &kp J           &kp V           &kp D             &kp K               &trans  &kp X      &kp H              &kp FSLH         &kp COMMA        &kp DOT              &trans
                            &trans          &tog 4          &lt 4 SPACE       &mt LEFT_GUI TAB    &trans  &kp ENTER  &lt 1 BACKSPACE    &kp ESC
                                                                                                  &trans
            >;

            label = "Canary";
        };

        lower_layer {
            display-name = "NUMBER";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&bt BT_NXT  &trans  &trans       &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9    &mmv MOVE_UP     &trans              &trans          &kp UP_ARROW      &trans         &trans   &kp BSPC
&to 5       &trans  &trans       &hrm LEFT_GUI KP_N4        &hrm LEFT_SHIFT KP_NUMBER_5  &kp KP_NUMBER_6    &mmv MOVE_DOWN   &kp HOME            &kp LEFT_ARROW  &kp DOWN_ARROW    &kp RIGHT      &kp END  &kp PG_UP
&trans      &trans  &trans       &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3    &mmv MOVE_LEFT   &kp LA(LEFT_ARROW)  &kp LA(DOWN)    &kp LA(UP_ARROW)  &kp LA(RIGHT)  &trans   &kp PG_DN
                    &kp LS(F12)  &kp KP_NUMBER_0  &trans           &kp LEFT_ALT       &mmv MOVE_RIGHT  &kp INS             &kp DEL         &trans
                                                                                      &mkp LCLK
            >;

            label = "NUMBER";
            sensor-bindings = <&rgb_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &mmv MOVE_UP     &kp CARET  &kp AMPS   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp ASTERISK  &kp BSPC
&trans  &trans    &trans  &trans    &trans    &mkp MB4     &mmv MOVE_DOWN   &kp MINUS  &kp EQUAL  &kp LBKT              &kp RBKT               &kp BSLH      &kp GRAVE
&trans  &trans    &trans  &none     &kp F20   &mkp MB5     &mmv MOVE_LEFT   &kp UNDER  &kp PLUS   &kp LBRC              &kp RBRC               &kp PIPE      &kp TILDE
                  &trans  &trans    &trans    &kp SPACE    &mmv MOVE_RIGHT  &kp RET    &trans     &trans
                                                           &mkp LCLK
            >;

            label = "SYMBOL";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&trans  &kp F1      &kp F2      &kp F3       &kp F4     &kp F5      &mmv MOVE_UP     &kp F6       &kp F7     &kp F8       &kp F9      &kp F10          &kp F11
&trans  &trans      &mkp LCLK   &mkp MCLK    &mkp RCLK  &mkp MB4    &mmv MOVE_DOWN   &bootloader  &mkp LCLK  &mkp MCLK    &mkp RCLK   &kp PRINTSCREEN  &kp F12
&trans  &sys_reset  &trans      &bootloader  &trans     &mkp MB5    &mmv MOVE_LEFT   &trans       &trans     &bootloader  &sys_reset  &kp SCROLLLOCK   &kp PAUSE_BREAK
                    &kp C_MUTE  &trans       &trans     &trans      &mmv MOVE_RIGHT  &trans       &trans     &trans
                                                                    &mkp LCLK
            >;

            label = "FN";
            sensor-bindings = <&scroll_encoder>;
        };

        default_layer {
            display-name = "QWERTY";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |                ↑    |  Y  |  U   |  I  |  O  |  P  | BKSP |      &kp UP_ARROW 
            // | SHIFT |  A  |  S  |  D  |  F  |  G  |               ↓    |  H  |  J   |  K  |  L  |  ;  |  '   | 
            // | CTRL |  Z  |  X  |  C  |  V  |  B  |                ←    |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |                →    | ENT | RSE  | ALT |
            //                                                      enter

            bindings = <
&kp TAB    &kp Q               &kp W           &kp E           &kp R             &kp T               &mmv MOVE_UP     &kp Y        &kp U              &kp I            &kp O            &kp P                        &kp BSPC
&td0       &mt LEFT_CONTROL A  &mt LEFT_ALT S  &mt LEFT_GUI D  &mt LEFT_SHIFT F  &kp G               &mmv MOVE_DOWN   &kp H        &mt RIGHT_SHIFT J  &mt RIGHT_GUI K  &mt RIGHT_ALT L  &mt RIGHT_CONTROL SEMICOLON  &kp SQT
&kp LCTRL  &kp Z               &kp X           &kp C           &kp V             &kp B               &mmv MOVE_LEFT   &kp N        &kp M              &kp COMMA        &kp DOT          &kp FSLH                     &kp ESC
                               &kp C_MUTE      &tog 0          &lt 4 SPACE       &mt LEFT_GUI TAB    &mmv MOVE_RIGHT  &lt 1 ENTER  &lt 1 BACKSPACE    &kp ESC
                                                                                                     &mkp LCLK
            >;

            label = "QWERTY";
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOLUME_DOWN>;
        };

        layer_5 {
            bindings = <
&kp TAB    &kp Q      &kp W   &kp E  &kp R      &kp T        &trans  &trans  &trans  &trans  &trans  &trans  &to 3
&trans     &kp A      &kp S   &kp D  &kp F      &kp G        &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp LSHFT  &kp LCTRL  &kp X   &kp C  &kp V      &kp B        &trans  &trans  &trans  &trans  &trans  &trans  &trans
                      &trans  &kp C  &kp SPACE  &kp LCTRL    &trans  &trans  &trans  &trans
                                                             &trans
            >;
        };
    };
};
